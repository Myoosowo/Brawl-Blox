-- Load Rayfield UI Library
local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()

-- Create the Window
local Window = Rayfield:CreateWindow({
    Name = "Brawl Blox",
    LoadingTitle = "dont use Auto farm its shit it is with Ai",
    LoadingSubtitle = "By YourName",
    ConfigurationSaving = {
        Enabled = true,
        FolderName = Test,
        FileName = "TSEC"
    },
    Discord = {
        Enabled = false,
        Invite = "YourInviteCode",
        RememberJoins = true
    },
    KeySystem = false
})

-- Create a Tab
local MainTab = Window:CreateTab("Main", 4483362458) -- Name & Icon ID

-- Create a Section
MainTab:CreateSection("Attack & Farming")

-- Auto Attack Variables
local attackLoop = false

-- Function to get mouse position in 3D space
local function GetMousePosition()
    local player = game:GetService("Players").LocalPlayer
    local mouse = player:GetMouse()
    return Vector3.new(mouse.Hit.p.X, mouse.Hit.p.Y, mouse.Hit.p.Z)
end

-- Function to start or stop the attack
local function AttackFunction()
    while attackLoop do
        local targetPosition = GetMousePosition()
        local args = {
            [1] = targetPosition, -- Shoot at mouse position
            [2] = false
        }
        game:GetService("ReplicatedStorage"):WaitForChild("RemoteEvents"):WaitForChild("AttackFunction"):InvokeServer(unpack(args))
        task.wait(0.1) -- Adjust delay as needed
    end
end

-- Toggle Button for Auto Attack
MainTab:CreateToggle({
    Name = "Auto Attack (Aim with Mouse)",
    CurrentValue = false,
    Flag = "AutoAttack",
    Callback = function(Value)
        attackLoop = Value
        if attackLoop then
            AttackFunction()
        end
    end
})

-- Auto Farm Variables
local farmLoop = false
local playersList = {}

-- Function to get all players in the game (excluding local player)
local function GetAllPlayers()
    local players = game:GetService("Players"):GetPlayers()
    local localPlayer = game:GetService("Players").LocalPlayer
    playersList = {}

    for _, player in pairs(players) do
        if player ~= localPlayer and player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
            table.insert(playersList, player.Character)
        end
    end
end

-- Function to move behind the current player
local function MoveBehindPlayer(targetCharacter)
    local localPlayer = game:GetService("Players").LocalPlayer
    local character = localPlayer.Character
    if character and targetCharacter and targetCharacter:FindFirstChild("HumanoidRootPart") then
        local targetPos = targetCharacter.HumanoidRootPart.Position + targetCharacter.HumanoidRootPart.CFrame.LookVector * -3
        character.HumanoidRootPart.CFrame = CFrame.new(targetPos)
        
        -- Lock mouse to the playerâ€™s position
        local mouse = game:GetService("Players").LocalPlayer:GetMouse()
        mouse.Move:Connect(function()
            mouse.Hit = CFrame.new(targetPos).p
        end)
    end
end

-- Function to auto farm (move to all players one by one)
local function AutoFarm()
    while farmLoop do
        GetAllPlayers()  -- Update the list of players in the game
        for _, targetCharacter in pairs(playersList) do
            -- If the player is dead or doesn't exist anymore, skip them
            if targetCharacter and targetCharacter:FindFirstChild("HumanoidRootPart") then
                MoveBehindPlayer(targetCharacter)
                task.wait(1) -- Adjust delay for smooth movement
            end
        end
        task.wait(1) -- Small delay before restarting the loop
    end
end

-- Button for Auto Farm
MainTab:CreateToggle({
    Name = "Auto Farm (Go to every player)",
    CurrentValue = false,
    Flag = "AutoFarm",
    Callback = function(Value)
        farmLoop = Value
        if farmLoop then
            AutoFarm()
        end
    end
})

-- Auto Farm Gems Variables
local farmGemsLoop = false

-- Position to farm gems at
local farmPosition = Vector3.new(-128, 74, 2947)

-- Function to move to the farm position
local function MoveToFarmPosition()
    local character = game:GetService("Players").LocalPlayer.Character
    if character then
        -- Move the character to the specified position
        character.HumanoidRootPart.CFrame = CFrame.new(farmPosition)
    end
end

-- Function to rejoin the game after staying at the farm position for 3 seconds
local function RejoinGame()
    -- Wait for 3 seconds at the farm position
    task.wait(3)
    
    -- Rejoin the game by teleporting to a new server
    game:GetService("TeleportService"):Teleport(game.PlaceId, game:GetService("Players").LocalPlayer)
end

-- Function to start the Auto Farm Gems loop
local function AutoFarmGems()
    while farmGemsLoop do
        -- Move to the farm position and rejoin continuously
        MoveToFarmPosition()  -- Move to the farm position
        task.wait(3)  -- Wait 3 seconds at the position
        RejoinGame()  -- Rejoin the game after 3 seconds
        task.wait(5)  -- Small delay before restarting the loop again (optional)
    end
end

-- Button for Auto Farm Gems
MainTab:CreateToggle({
    Name = "Auto Farm Gems (Go to Farm Position and Rejoin)",
    CurrentValue = false,
    Flag = "AutoFarmGems",
    Callback = function(Value)
        farmGemsLoop = Value
        if farmGemsLoop then
            AutoFarmGems()
        end
    end
})
